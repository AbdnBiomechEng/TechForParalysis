%% Read in model structure
modelstr = load('model_struct_clav_scap_orig.mat');
model = modelstr.model;

ndof = model.nDofs;
nmus = model.nMus;
nstates = 2*ndof + 2*nmus;

musnames = cell(nmus,1);
for imus=1:nmus
    musnames{imus} = model.muscles{imus}.osim_name;
end

% Initialize the model
das3('Initialize',model);

LCEopt = das3('LCEopt');
SEEslack = das3('SEEslack');

% Load all angles
angles = importfile('all_angles_larger_workspace.mot')*pi/180;

nangles = size(angles,1);

x = zeros(nstates,1);
x(2*ndof + (1:nmus)) = 1; % lce = lceopt

mlengths = zeros(nmus,nangles);
n_lce = zeros(nmus,nangles);

% Go through all positions and get the normalized fibre length for all
% muscles

for iangle = 1:nangles
    x(4:ndof) = angles(iangle,:);
    mlengths(:,iangle) = das3('Musclelengths', x);
    n_lce(:,iangle) = (mlengths(:,iangle) - SEEslack)./LCEopt;
end

minlce = zeros(nmus,1);
maxlce = zeros(nmus,1);

for imus=1:nmus
    minlce(imus) = min(n_lce(imus,:));
    maxlce(imus) = max(n_lce(imus,:));
end

figure; stem(minlce,'BaseValue',1);
hold on;
stem(maxlce,'BaseValue',1);
xticks(1:137)
xticklabels(musnames)
xtickangle(0)
view([90 -90])
ax = gca ; ax.Position = [0.11 0.05 0.87 0.95];

save all_lengths_lce musnames mlengths n_lce minlce maxlce angles


function angles = importfile(filename, dataLines)
%IMPORTFILE Import data from a text file
%  ALLANGLESLARGERWORKSPACE = IMPORTFILE(FILENAME) reads data from text
%  file FILENAME for the default selection.  Returns the numeric data.
%
%  ALLANGLESLARGERWORKSPACE = IMPORTFILE(FILE, DATALINES) reads data for
%  the specified row interval(s) of text file FILENAME. Specify
%  DATALINES as a positive scalar integer or a N-by-2 array of positive
%  scalar integers for dis-contiguous row intervals.
%
%  Example:
%  allangleslargerworkspace = importfile("C:\Users\s04db9\OneDrive - University of Aberdeen\Documents\Code\TechForParalysis\Code\Model\Utils\all_angles_larger_workspace.mot", [7, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 19-Jul-2024 09:28:55

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [7, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 15);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["Var1", "Var2", "Var3", "Var4", "VarName5", "VarName6", "VarName7", "VarName8", "VarName9", "VarName10", "VarName11", "VarName12", "VarName13", "VarName14", "VarName15"];
opts.SelectedVariableNames = ["VarName5", "VarName6", "VarName7", "VarName8", "VarName9", "VarName10", "VarName11", "VarName12", "VarName13", "VarName14", "VarName15"];
opts.VariableTypes = ["string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var4"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var4"], "EmptyFieldRule", "auto");

% Import the data
allangleslargerworkspace = readtable(filename, opts);

%% Convert to output type
angles = table2array(allangleslargerworkspace);
end
